use_mit_license("Benjamin Crary")
usethis::use_mit_license("Benjamin Crary")
usethis::use_package("stringr")
usethis::use_readme_md()
usethis::use_r("read_log")
read_log <- function(filepath) {
read.table(filepath)
}
read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
read_log <- function(filepath) {
read.text(filepath)
}
read_log <- function(filepath) {
read.text(filepath)
}
read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
read_log <- function(filepath) {
readtext(filepath)
}
read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
readLines
read_log <- function(filepath) {
readLines(filepath)
}
read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
x <- read_log()
x ,- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
x <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
x$1
x[1]
x[1000]
x[17015]
x[17105]
x[17106]
y <- grep("Warning:", x)
dim(y)
length(y)
lenght(x)
length(x)
z <- x[grep("Warning") -1]
z <- x[grep("Warning",x) -1]
z
z <- x[grep("Warning",x) 5]
z <- x[grep("Warning",x) +5]
z
z[17105]
z <- x[grep("Warning",x) 0+5]
z <- x[grep("Warning",x) 0-5]
z <- x[grep("Warning",x) c(0,+1)]
z
grep?
help(grep)
z <- x[grep("Warning",x)+1+2]
z
z <- x[grep("Warning",x)+1,+2]
usethis::use_r()
usethis::use_r("extract_warngings")
extract_CFL_warnings <- function(log) {
data.frame("Warning" = x[grep("Warning: CFL",x)],
"time" = x[grep("Warning: CFL",x) +1],
"time step interval" = x[grep("Warning: CFL",x) +2],
"maximum CFL number" = x[grep("Warning: CFL",x) +3],
"element number" = x[grep("Warning: CFL",x) +4],
"x-coordinate (center)" = x[grep("Warning: CFL",x) +5],
"y-coordinate (center)" = x[grep("Warning: CFL",x) +6],
"still water depth" = x[grep("Warning: CFL",x) +7],
"length" = x[grep("Warning: CFL",x) +8]
)
}
log <- read_log(TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log)
log <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
cfl_warnings <- extract_CFL_warnings(log)
View(cfl_warnings)
View(cfl_warnings)
extract_CFL_warnings <- function(log) {
df <- data.frame("Warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"time step interval" = log[grep("Warning: CFL",log) +2],
"maximum CFL number" = log[grep("Warning: CFL",log) +3],
"element number" = log[grep("Warning: CFL",log) +4],
"x-coordinate (center)" = log[grep("Warning: CFL",log) +5],
"y-coordinate (center)" = log[grep("Warning: CFL",log) +6],
"still water depth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
df$time <- gsub(".*:","", df$time)
}
cfl_warnings <- extract_CFL_warnings(log)
extract_CFL_warnings <- function(log) {
df <- data.frame("Warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"time step interval" = log[grep("Warning: CFL",log) +2],
"maximum CFL number" = log[grep("Warning: CFL",log) +3],
"element number" = log[grep("Warning: CFL",log) +4],
"x-coordinate (center)" = log[grep("Warning: CFL",log) +5],
"y-coordinate (center)" = log[grep("Warning: CFL",log) +6],
"still water depth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
}
cfl_warnings <- extract_CFL_warnings(log)
View(cfl_warnings)
x <- gsub(".*:", "",cfl_warnings$time)
x
x <- as.numeric(gsub(".*:", "",cfl_warnings$time))
x
df$time <- as.numeric(gsub(".*:", "",df$time))
extract_CFL_warnings <- function(log) {
#Search warning and create dataframe from following lines
df <- data.frame("Warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"timestepinterval" = log[grep("Warning: CFL",log) +2],
"maximumCFLnumber" = log[grep("Warning: CFL",log) +3],
"elementnumber" = log[grep("Warning: CFL",log) +4],
"xcoordinate" = log[grep("Warning: CFL",log) +5],
"ycoordinate" = log[grep("Warning: CFL",log) +6],
"stillwaterdepth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
#remove label and format as numeric
df$time <- as.numeric(gsub(".*:", "",df$time))
df$timestepinterval <- as.numeric(gsub(".*:", "",df$timestepinterval))
df$maximumCFLnumber <- as.numeric(gsub(".*:", "",df$maximumCFLnumber))
df$elementnumber <- as.numeric(gsub(".*:", "",df$elementnumber))
df$xcoordinate <- as.numeric(gsub(".*:", "",df$xcoordinate))
df$ycoordinate <- as.numeric(gsub(".*:", "",df$ycoordinate))
df$stillwaterdepth <- as.numeric(gsub(".*:", "",df$stillwaterdepth))
df$length <- as.numeric(gsub(".*:", "",df$length))
return(df)
}
cfl_warnings <- extract_CFL_warnings(log)
View(cfl_warnings)
View(cfl_warnings)
usethis::use_r("extract_stats")
use_package("dplyr")
usethis::use_package("dplyr")
usethis::use_package("magrittr")
log[50]
read_log <- function(filename) {
cat (filename, readLines(filename))
}
log <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
read_log <- function(filepath) {
c(filepath, readLines(filename))
}
log <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
read_log <- function(filepath) {
c(filepath, readLines(filepath))
}
log <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_CFLOutput.log")
log[1]
extract_CFL_warnings <- function(log) {
#Search warning and create dataframe from following lines
df <- data.frame("RunFile" = log[1],
"Warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"timestepinterval" = log[grep("Warning: CFL",log) +2],
"maximumCFLnumber" = log[grep("Warning: CFL",log) +3],
"elementnumber" = log[grep("Warning: CFL",log) +4],
"xcoordinate" = log[grep("Warning: CFL",log) +5],
"ycoordinate" = log[grep("Warning: CFL",log) +6],
"stillwaterdepth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
#remove label and format as numeric
df$time <- as.numeric(gsub(".*:", "",df$time))
df$timestepinterval <- as.numeric(gsub(".*:", "",df$timestepinterval))
df$maximumCFLnumber <- as.numeric(gsub(".*:", "",df$maximumCFLnumber))
df$elementnumber <- as.numeric(gsub(".*:", "",df$elementnumber))
df$xcoordinate <- as.numeric(gsub(".*:", "",df$xcoordinate))
df$ycoordinate <- as.numeric(gsub(".*:", "",df$ycoordinate))
df$stillwaterdepth <- as.numeric(gsub(".*:", "",df$stillwaterdepth))
df$length <- as.numeric(gsub(".*:", "",df$length))
return(df)
}
cfl_warnings <- extract_CFL_warnings(log)
extract_CFL_warnings <- function(log) {
#Search warning and create dataframe from following lines
df <- data.frame("run_file" = log[1],
"warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"time_step_interval" = log[grep("Warning: CFL",log) +2],
"maximum_CFL_number" = log[grep("Warning: CFL",log) +3],
"element_number" = log[grep("Warning: CFL",log) +4],
"x_coordinate" = log[grep("Warning: CFL",log) +5],
"y_coordinate" = log[grep("Warning: CFL",log) +6],
"still_water_depth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
#remove label and format as numeric
df$time <- as.numeric(gsub(".*:", "",df$time))
df$time_step_interval <- as.numeric(gsub(".*:", "",df$time_step_interval))
df$maximum_CFL_number <- as.numeric(gsub(".*:", "",df$maximum_CFL_number))
df$element_number <- as.numeric(gsub(".*:", "",df$element_number))
df$x_coordinate <- as.numeric(gsub(".*:", "",df$x_coordinate))
df$y_coordinate <- as.numeric(gsub(".*:", "",df$y_coordinate))
df$still_water_depth <- as.numeric(gsub(".*:", "",df$still_water_depth))
df$length <- as.numeric(gsub(".*:", "",df$length))
return(df)
}
cfl_warnings <- extract_CFL_warnings(log)
extract_CFL_stats <- function(cfl_warnings) {
df <- cfl_warnings %>%
group_by(element_number) %>%
summarise(error_count = n(),
earliest = min(time),
latest = max(time),
max_CFL = max(maximum_CFL_number)) %>%
mutate(run_file = cfl_warnings$run_file[1])
}
cfl_stats <- extract_CFL_stats(cfl_warnings)
library(magrittr)
cfl_stats <- extract_CFL_stats(cfl_warnings)
library(dplyr)
cfl_stats <- extract_CFL_stats(cfl_warnings)
View(cfl_stats)
View(cfl_stats)
write.csv(cfl_stats, "cfl_stats.csv", row.names=F, quote=F)
write.csv(cfl_warnings, "cfl_warnings.csv", row.names = F, quote=F)
library(available)
install.packages("available")
library(available)
available("MikeZeroTools")
Y
Y
Y
devtools::install_github("LimnoTech/MikeZeroTools")
use_git()
uesthis::use_git()
usethis::use_git()
usethis::use_description()
library(dplyr)
read_log <- function(filepath) {
c(filepath, readLines(filepath))
}
extract_CFL_warnings <- function(log) {
#Search warning and create dataframe from following lines
df <- data.frame("run_file" = log[1],
"warning" = log[grep("Warning: CFL",log)],
"time" = log[grep("Warning: CFL",log) +1],
"time_step_interval" = log[grep("Warning: CFL",log) +2],
"maximum_CFL_number" = log[grep("Warning: CFL",log) +3],
"element_number" = log[grep("Warning: CFL",log) +4],
"x_coordinate" = log[grep("Warning: CFL",log) +5],
"y_coordinate" = log[grep("Warning: CFL",log) +6],
"still_water_depth" = log[grep("Warning: CFL",log) +7],
"length" = log[grep("Warning: CFL",log) +8]
)
#remove label and format as numeric
df$time <- as.numeric(gsub(".*:", "",df$time))
df$time_step_interval <- as.numeric(gsub(".*:", "",df$time_step_interval))
df$maximum_CFL_number <- as.numeric(gsub(".*:", "",df$maximum_CFL_number))
df$element_number <- as.numeric(gsub(".*:", "",df$element_number))
df$x_coordinate <- as.numeric(gsub(".*:", "",df$x_coordinate))
df$y_coordinate <- as.numeric(gsub(".*:", "",df$y_coordinate))
df$still_water_depth <- as.numeric(gsub(".*:", "",df$still_water_depth))
df$length <- as.numeric(gsub(".*:", "",df$length))
return(df)
}
extract_CFL_stats <- function(cfl_warnings) {
df <- cfl_warnings %>%
group_by(element_number) %>%
summarise(error_count = n(),
earliest = min(time),
latest = max(time),
max_CFL = max(maximum_CFL_number)) %>%
mutate(run_file = cfl_warnings$run_file[1])
}
log <- read_log("TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.log")
cfl_warnings <- extract_CFL_warnings(log)
cfl_stats <- extract_CFL_stats(cfl_warnings)
log
devtools::load_all(".")
write.csv(cfl_warnings,"TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.cflwarnings", row.names = F, quote=F)
write.csv(cfl_stats,"TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.cflstats", row.names = F, quote=F)
write.csv(cfl_stats,"TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.cflstats.csb", row.names = F, quote=F)
write.csv(cfl_stats,"TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.cflstats.csv", row.names = F, quote=F)
write.csv(cfl_warnings,"TEST_20200127_FBO_4B_Reg1560_75.2_2cmWet_StabilityRefinement_v1.cflwarnings.csv", row.names = F, quote=F)
devtools::check()
